# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: google/spanner/admin/instance/v1/spanner_instance_admin.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.annotations_pb2
import google.api.client_pb2
import google.api.field_behavior_pb2
import google.api.resource_pb2
import google.iam.v1.iam_policy_pb2
import google.iam.v1.policy_pb2
import google.longrunning.operations_pb2
import google.protobuf.empty_pb2
import google.protobuf.field_mask_pb2
import google.protobuf.timestamp_pb2
import google.spanner.admin.instance.v1.spanner_instance_admin_pb2


class InstanceAdminBase(abc.ABC):

    @abc.abstractmethod
    async def ListInstanceConfigs(self, stream: 'grpclib.server.Stream[google.spanner.admin.instance.v1.spanner_instance_admin_pb2.ListInstanceConfigsRequest, google.spanner.admin.instance.v1.spanner_instance_admin_pb2.ListInstanceConfigsResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetInstanceConfig(self, stream: 'grpclib.server.Stream[google.spanner.admin.instance.v1.spanner_instance_admin_pb2.GetInstanceConfigRequest, google.spanner.admin.instance.v1.spanner_instance_admin_pb2.InstanceConfig]') -> None:
        pass

    @abc.abstractmethod
    async def ListInstances(self, stream: 'grpclib.server.Stream[google.spanner.admin.instance.v1.spanner_instance_admin_pb2.ListInstancesRequest, google.spanner.admin.instance.v1.spanner_instance_admin_pb2.ListInstancesResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetInstance(self, stream: 'grpclib.server.Stream[google.spanner.admin.instance.v1.spanner_instance_admin_pb2.GetInstanceRequest, google.spanner.admin.instance.v1.spanner_instance_admin_pb2.Instance]') -> None:
        pass

    @abc.abstractmethod
    async def CreateInstance(self, stream: 'grpclib.server.Stream[google.spanner.admin.instance.v1.spanner_instance_admin_pb2.CreateInstanceRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def UpdateInstance(self, stream: 'grpclib.server.Stream[google.spanner.admin.instance.v1.spanner_instance_admin_pb2.UpdateInstanceRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def DeleteInstance(self, stream: 'grpclib.server.Stream[google.spanner.admin.instance.v1.spanner_instance_admin_pb2.DeleteInstanceRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def SetIamPolicy(self, stream: 'grpclib.server.Stream[google.iam.v1.iam_policy_pb2.SetIamPolicyRequest, google.iam.v1.policy_pb2.Policy]') -> None:
        pass

    @abc.abstractmethod
    async def GetIamPolicy(self, stream: 'grpclib.server.Stream[google.iam.v1.iam_policy_pb2.GetIamPolicyRequest, google.iam.v1.policy_pb2.Policy]') -> None:
        pass

    @abc.abstractmethod
    async def TestIamPermissions(self, stream: 'grpclib.server.Stream[google.iam.v1.iam_policy_pb2.TestIamPermissionsRequest, google.iam.v1.iam_policy_pb2.TestIamPermissionsResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/google.spanner.admin.instance.v1.InstanceAdmin/ListInstanceConfigs': grpclib.const.Handler(
                self.ListInstanceConfigs,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.spanner.admin.instance.v1.spanner_instance_admin_pb2.ListInstanceConfigsRequest,
                google.spanner.admin.instance.v1.spanner_instance_admin_pb2.ListInstanceConfigsResponse,
            ),
            '/google.spanner.admin.instance.v1.InstanceAdmin/GetInstanceConfig': grpclib.const.Handler(
                self.GetInstanceConfig,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.spanner.admin.instance.v1.spanner_instance_admin_pb2.GetInstanceConfigRequest,
                google.spanner.admin.instance.v1.spanner_instance_admin_pb2.InstanceConfig,
            ),
            '/google.spanner.admin.instance.v1.InstanceAdmin/ListInstances': grpclib.const.Handler(
                self.ListInstances,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.spanner.admin.instance.v1.spanner_instance_admin_pb2.ListInstancesRequest,
                google.spanner.admin.instance.v1.spanner_instance_admin_pb2.ListInstancesResponse,
            ),
            '/google.spanner.admin.instance.v1.InstanceAdmin/GetInstance': grpclib.const.Handler(
                self.GetInstance,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.spanner.admin.instance.v1.spanner_instance_admin_pb2.GetInstanceRequest,
                google.spanner.admin.instance.v1.spanner_instance_admin_pb2.Instance,
            ),
            '/google.spanner.admin.instance.v1.InstanceAdmin/CreateInstance': grpclib.const.Handler(
                self.CreateInstance,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.spanner.admin.instance.v1.spanner_instance_admin_pb2.CreateInstanceRequest,
                google.longrunning.operations_pb2.Operation,
            ),
            '/google.spanner.admin.instance.v1.InstanceAdmin/UpdateInstance': grpclib.const.Handler(
                self.UpdateInstance,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.spanner.admin.instance.v1.spanner_instance_admin_pb2.UpdateInstanceRequest,
                google.longrunning.operations_pb2.Operation,
            ),
            '/google.spanner.admin.instance.v1.InstanceAdmin/DeleteInstance': grpclib.const.Handler(
                self.DeleteInstance,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.spanner.admin.instance.v1.spanner_instance_admin_pb2.DeleteInstanceRequest,
                google.protobuf.empty_pb2.Empty,
            ),
            '/google.spanner.admin.instance.v1.InstanceAdmin/SetIamPolicy': grpclib.const.Handler(
                self.SetIamPolicy,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.iam.v1.iam_policy_pb2.SetIamPolicyRequest,
                google.iam.v1.policy_pb2.Policy,
            ),
            '/google.spanner.admin.instance.v1.InstanceAdmin/GetIamPolicy': grpclib.const.Handler(
                self.GetIamPolicy,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.iam.v1.iam_policy_pb2.GetIamPolicyRequest,
                google.iam.v1.policy_pb2.Policy,
            ),
            '/google.spanner.admin.instance.v1.InstanceAdmin/TestIamPermissions': grpclib.const.Handler(
                self.TestIamPermissions,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.iam.v1.iam_policy_pb2.TestIamPermissionsRequest,
                google.iam.v1.iam_policy_pb2.TestIamPermissionsResponse,
            ),
        }


class InstanceAdminStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.ListInstanceConfigs = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.spanner.admin.instance.v1.InstanceAdmin/ListInstanceConfigs',
            google.spanner.admin.instance.v1.spanner_instance_admin_pb2.ListInstanceConfigsRequest,
            google.spanner.admin.instance.v1.spanner_instance_admin_pb2.ListInstanceConfigsResponse,
        )
        self.GetInstanceConfig = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.spanner.admin.instance.v1.InstanceAdmin/GetInstanceConfig',
            google.spanner.admin.instance.v1.spanner_instance_admin_pb2.GetInstanceConfigRequest,
            google.spanner.admin.instance.v1.spanner_instance_admin_pb2.InstanceConfig,
        )
        self.ListInstances = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.spanner.admin.instance.v1.InstanceAdmin/ListInstances',
            google.spanner.admin.instance.v1.spanner_instance_admin_pb2.ListInstancesRequest,
            google.spanner.admin.instance.v1.spanner_instance_admin_pb2.ListInstancesResponse,
        )
        self.GetInstance = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.spanner.admin.instance.v1.InstanceAdmin/GetInstance',
            google.spanner.admin.instance.v1.spanner_instance_admin_pb2.GetInstanceRequest,
            google.spanner.admin.instance.v1.spanner_instance_admin_pb2.Instance,
        )
        self.CreateInstance = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.spanner.admin.instance.v1.InstanceAdmin/CreateInstance',
            google.spanner.admin.instance.v1.spanner_instance_admin_pb2.CreateInstanceRequest,
            google.longrunning.operations_pb2.Operation,
        )
        self.UpdateInstance = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.spanner.admin.instance.v1.InstanceAdmin/UpdateInstance',
            google.spanner.admin.instance.v1.spanner_instance_admin_pb2.UpdateInstanceRequest,
            google.longrunning.operations_pb2.Operation,
        )
        self.DeleteInstance = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.spanner.admin.instance.v1.InstanceAdmin/DeleteInstance',
            google.spanner.admin.instance.v1.spanner_instance_admin_pb2.DeleteInstanceRequest,
            google.protobuf.empty_pb2.Empty,
        )
        self.SetIamPolicy = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.spanner.admin.instance.v1.InstanceAdmin/SetIamPolicy',
            google.iam.v1.iam_policy_pb2.SetIamPolicyRequest,
            google.iam.v1.policy_pb2.Policy,
        )
        self.GetIamPolicy = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.spanner.admin.instance.v1.InstanceAdmin/GetIamPolicy',
            google.iam.v1.iam_policy_pb2.GetIamPolicyRequest,
            google.iam.v1.policy_pb2.Policy,
        )
        self.TestIamPermissions = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.spanner.admin.instance.v1.InstanceAdmin/TestIamPermissions',
            google.iam.v1.iam_policy_pb2.TestIamPermissionsRequest,
            google.iam.v1.iam_policy_pb2.TestIamPermissionsResponse,
        )
